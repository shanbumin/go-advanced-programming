syntax = "proto3";

package main;

message String {
  string value = 1;
}

service HelloService {
  rpc Hello (String) returns (String);
}


//使用protoc-gen-go内置的gRPC插件生成gRPC代码：
//protoc --go_out=plugins=grpc:. hello.proto

//gRPC插件会为服务端和客户端生成不同的接口：
/*
type HelloServiceServer interface {
   Hello(context.Context, *String) (*String, error)
}

todo gRPC通过context.Context参数，为每个方法调用提供了上下文支持。
     客户端在调用方法的时候，可以通过可选的grpc.CallOption类型的参数提供额外的上下文信息。
type HelloServiceClient interface {
     Hello(context.Context, *String, ...grpc.CallOption) (*String, error)
}
*/