RPC是远程过程调用的缩写（Remote Procedure Call），通俗地说就是调用远处的一个函数。
远处到底有多远呢？可能是同一个文件内的不同函数，也可能是同一个机器的另一个进程的函数，还可能是远在火星好奇号上面的某个秘密方法。
因为RPC涉及的函数可能非常之远，远到它们之间说着完全不同的语言，语言就成了两边的沟通障碍。
而Protobuf因为支持多种不同的语言（甚至不支持的语言也可以扩展支持），其本身特性也非常方便描述服务的接口（也就是方法列表），因此非常适合作为RPC世界的接口交流语言。
本章将讨论RPC的基本用法，如何针对不同场景设计自己的RPC服务，以及围绕Protobuf构造的更为庞大的RPC生态。
 ------
 在涉及RPC的应用中，作为开发人员一般有四种角色：
 a.服务端实现RPC方法的开发人员
 b.客户端调用RPC方法的人员
 c.制定服务端和客户端RPC接口规范的设计人员
 d.RPC应用部署人员(服务注册与发现、与web融合)
 --------

RPC是远程过程调用的简称，是分布式系统中不同节点间流行的通信方式。
在互联网时代，RPC已经和IPC一样成为一个不可或缺的基础构件。
因此Go语言的标准库也提供了一个简单的RPC实现，我们将以此为入口学习RPC的各种用法。
------
net/rpc(go独有) ====>net/rpc/jsonrpc(可跨语言)

