package main


//用前面的原子操作并不能解决问题，因为我们无法确定两个原子操作之间的顺序。解决问题的办法就是通过[同步原语]来给两个事件明确排序：
func main() {
	done := make(chan int)

	go func(){
		println("你好, 世界")
		done <- 1
	}()

	<-done
}
//当`<-done`执行时，必然要求`done <- 1`也已经执行。
//根据同一个Gorouine依然满足顺序一致性规则，我们可以判断当`done <- 1`执行时，`println("你好, 世界")`语句必然已经执行完成了。
//因此，现在的程序确保可以正常打印结果。