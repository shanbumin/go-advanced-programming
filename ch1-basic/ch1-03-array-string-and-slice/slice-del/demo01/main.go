package main

import "fmt"

func main() {
	//根据要删除元素的位置有三种情况：从开头位置删除，从中间位置删除，从尾部删除。
	//1.其中删除切片尾部的元素最快：
	a := []int{1,2,3,4,5,6,7,8}
	a = a[:len(a)-1]   // 删除尾部1个元素
	N:=2
	a = a[:len(a)-N]   // 删除尾部N个元素
	fmt.Printf("%#v\r\n",a)

    //2.删除开头的元素可以直接移动数据指针：
    fmt.Println("---------------------------------------------")
	a2 := []int{1, 2, 3,4,5}
	a2 = a2[1:] // 删除开头1个元素
	N2:=2
	a2 = a2[N2:] // 删除开头N个元素
	fmt.Printf("%#v\r\n",a2)

    //3.删除开头的元素也可以不移动数据指针，但是将后面的数据向开头移动。
    //可以用`append`原地完成（所谓原地完成是指在原有的切片数据对应的内存区间内完成，不会导致内存空间结构的变化）：
	fmt.Println("---------------------------------------------")
	a3 := []int{1, 2, 3,4,5,6,7,8,9,10}
	a3 = append(a3[:0], a3[1:]...) // 删除开头1个元素
	N3:=3
	a3 = append(a3[:0], a3[N3:]...) // 删除开头N个元素
	fmt.Printf("%#v\r\n",a3)


	//4.也可以用`copy`完成删除开头的元素：
	fmt.Println("---------------------------------------------")
	a4 := []int{1, 2, 3,4,5,6}
	a4 = a4[:copy(a4, a4[1:])] // 删除开头1个元素
	N4:=3
	a4 = a4[:copy(a4, a4[N4:])] // 删除开头N个元素
	fmt.Printf("%#v\r\n",a4)


    //5.对于删除中间的元素，需要对剩余的元素进行一次整体挪动，同样可以用`append`或`copy`原地完成：
	fmt.Println("---------------------------------------------")
	a5 := []int{1, 2, 3,4,5,6,7,8,9,10,11,12}
	i:=5
	N=2
	a5 = append(a5[:i], a5[i+1:]...) // 删除中间1个元素 (即删除下标为5的元素)
	fmt.Printf("%#v\r\n",a5)
	a5 = append(a5[:i], a5[i+N:]...) // 删除中间N个元素(删除下标为5以及之后的2个元素)
	fmt.Printf("%#v\r\n",a5)
	//a = a[:i+copy(a[i:], a[i+1:])]  // 删除中间1个元素
	//a = a[:i+copy(a[i:], a[i+N:])]  // 删除中间N个元素
   //删除开头的元素和删除尾部的元素都可以认为是删除中间元素操作的特殊情况。



}
